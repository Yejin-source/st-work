package com.example.fileupload.controller;

import java.io.File;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.fileupload.dto.BoardForm;
import com.example.fileupload.entity.Board;
import com.example.fileupload.entity.BoardMapping;
import com.example.fileupload.entity.Boardfile;
import com.example.fileupload.repository.BoardRepository;
import com.example.fileupload.repository.BoardfileRepository;

@Controller
public class BoardfileController {
	
	@Autowired // 스프링이 자동으로 객체 주입
	BoardfileRepository boardfileRepository;
	@Autowired
	BoardRepository boardRepository;
	
	
	// 파일 삭제
	@GetMapping("/removeBoardfile")
	public String removeBoardfile(@RequestParam(value = "fno") int fno
									, @RequestParam(value = "bno") int bno) {
		
		// 1) 파일 삭제 후
		Boardfile boardfile = boardfileRepository.findById(fno).orElse(null);
		
		// 파일 가져오기
		File f = new File("c:/project/upload/" + boardfile.getFname() + "." + boardfile.getFext());
		
		if(f.exists()) { // 파일이 있다면
			f.delete(); // 삭제
		}
		
		// 2) 테이블 Row 삭제
		boardfileRepository.deleteById(fno);
		return "redirect:/boardOne?bno="+bno;
	}
	
	
	// board 수정
	@GetMapping("/modifyBoard") // Model model: 컨트롤러 -> 뷰로 데이터를 넘겨주는 통로
	public String modifiyBoard(Model model, @RequestParam(value = "bno") int bno) {
		
		// 템플릿에서 boardMapping으로 출력해도, 컨트롤러에서 반드시 BoardMapping으로 받아야 하는 건 아님
		Board board = boardRepository.findByBno(bno);
		model.addAttribute("board", board)
	}
	
	// board 수정 기능
	@PostMapping("/update")
	public String update(BoardForm boardForm) {
		BoardMapping boardMapping = boardForm
	}
	
	// board 삭제
	
	
	// board 삭제 기능
}
