package com.example.jpaboard.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.jpaboard.entity.Board;
import com.example.jpaboard.repository.BoardRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class BoardController {
	
	@Autowired // 의존성 주입을 자동으로 해 줌
	private BoardRepository boardRepository;
		// 스프링이 알아서 객체를 찾아서 넣어줌 (new 필요 X)

	
	@GetMapping("/board/boardList")
	public String boardList(Model model
							, @RequestParam(value = "currentPage", defaultValue = "0") int currentPage
							, @RequestParam(value = "rowPerPage", defaultValue = "10") int rowPerPage
							, @RequestParam(value = "word", defaultValue = "") String word) {
		
		Sort sort = Sort.by("no").descending(); // 내림차순
		
		PageRequest pageable = PageRequest.of(currentPage, rowPerPage, sort);
							// PageRequest.of(현재 페이지, 페이지당 데이터 수, 정렬 방식)
		Page<Board> list = boardRepository.findByTitleContaining(pageable, word);

		
		// 페이징 관련 디버깅
		log.debug("list.getTotalElements(): "+ list.getTotalElements()); // list.size() X -> 전체 행의 사이즈가 나옴
		log.debug("list.getTotalPages(): "+ list.getTotalPages()); // 전체 페이지 사이즈
		log.debug("list.getNumber(): "+ list.getNumber()); // 현재 페이지
		log.debug("list.getSize(): "+ list.getSize()); // rowPerPage
		log.debug("list.isFirst(): "+ list.isFirst()); // 1 페이지인지 : 이전 링크 유무
		log.debug("list.hasNext(): "+ list.hasNext()); // 다음이 있는지 : 다음 링크 유무
		
		
		// model.addAttribute("변수명", 데이터) : 컨트롤러에서 뷰(View, HTML 파일)로 데이터를 전달함
		model.addAttribute("list", list);
		model.addAttribute("prePage", list.getNumber()-1);
		model.addAttribute("nextPage", list.getNumber()+1);
		model.addAttribute("word", word);
		
		return "borad/boardList"; // 포워딩
		
		/*
			포워딩(Forward) vs 리다이렉트(Redirect)
			
			서버 내부 이동 | 클라이언트(브라우저)에게 다시 요청하라고 시킴
			URL 변화 X | URL 변화 O
			속도 빠름	| 속도 느림
		    리스트 보기, 단순 화면 이동 | 로그인 후 메인 페이지 이동, 글 저장 후 목록으로	 
		*/
	}
	
	
	@GetMapping("board/boardOne")
	public String boardOne(Model model, @RequestParam Integer no) {
		Board board = boardRepository.findById(no);
	}
}
